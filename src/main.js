/* eslint-disable max-lines */
const getRange = function (min, max) {
  const length = max - min + 1
  return Array.from({ length }, (_, index) => min + index)
}

/* eslint-disable no-magic-numbers */
export const codepoints = [
  ...getRange(0x0000, 0x058f),
  ...getRange(0x1d00, 0x1fff),
  0x0e3f,
  0x2010,
  ...getRange(0x2012, 0x2016),
  ...getRange(0x2018, 0x2022),
  0x2024,
  0x2026,
  0x2030,
  0x2032,
  0x2033,
  0x2039,
  0x203a,
  ...getRange(0x203c, 0x203e),
  0x2043,
  0x2044,
  0x205e,
  0x2070,
  0x2071,
  ...getRange(0x2074, 0x208e),
  ...getRange(0x2090, 0x2094),
  ...getRange(0x20a0, 0x20ba),
  0x20bd,
  0x20bf,
  0x2105,
  0x2113,
  0x2116,
  0x2117,
  0x2122,
  0x2126,
  0x212e,
  0x2132,
  0x214d,
  0x214e,
  ...getRange(0x2153, 0x215e),
  0x2183,
  0x2184,
  ...getRange(0x2190, 0x2195),
  0x2202,
  0x2206,
  0x220f,
  0x2211,
  0x2212,
  0x2215,
  0x2219,
  0x221a,
  0x221e,
  0x221f,
  0x2229,
  0x222b,
  0x2248,
  0x2260,
  0x2261,
  0x2264,
  0x2265,
  0x2302,
  0x2310,
  0x2320,
  0x2321,
  ...getRange(0x2460, 0x2473),
  0x24ea,
  0x24ef,
  ...getRange(0x24f0, 0x24f4),
  ...getRange(0x24ff, 0x2580),
  0x2584,
  0x2588,
  0x258c,
  ...getRange(0x2590, 0x2593),
  0x25a0,
  0x25a1,
  ...getRange(0x25aa, 0x25ac),
  0x25b2,
  0x25b4,
  0x25b8,
  0x25ba,
  0x25bc,
  0x25be,
  0x25c2,
  0x25c4,
  ...getRange(0x25ca, 0x25cc),
  0x25cf,
  0x25d8,
  0x25d9,
  0x25e6,
  ...getRange(0x263a, 0x263c),
  0x2640,
  0x2642,
  0x2660,
  0x2663,
  0x2665,
  0x2666,
  0x266a,
  0x266b,
  0x266f,
  0x2736,
  ...getRange(0x2776, 0x277f),
  ...getRange(0x2c60, 0x2c7f),
  0x2e17,
  ...getRange(0xa717, 0xa721),
  ...getRange(0xa788, 0xa78c),
  ...getRange(0xfb00, 0xfb06),
  ...getRange(0xfb13, 0xfb17),
]
/* eslint-enable no-magic-numbers */

export const regexp = /\u0E3F\u2010\u2012-\u2016\u2018-\u2022\u2024\u2026\u2030\u2032\u2033\u2039\u203A\u203C-\u203E\u2043\u2044\u205E\u2070\u2071\u2074-\u208E\u2090-\u2094\u20A0-\u20BA\u20BD\u20BF\u2105\u2113\u2116\u2117\u2122\u2126\u212E\u2132\u214D\u214E\u2153-\u215E\u2183\u2184\u2190-\u2195\u2202\u2206\u220F\u2211\u2212\u2215\u2219\u221A\u221E\u221F\u2229\u222B\u2248\u2260\u2261\u2264\u2265\u2302\u2310\u2320\u2321\u2460-\u2473\u24EA\u24EF\u24F0-\u24F4\u24FF-\u2580\u2584\u2588\u258C\u2590-\u2593\u25A0\u25A1\u25AA-\u25AC\u25B2\u25B4\u25B8\u25BA\u25BC\u25BE\u25C2\u25C4\u25CA-\u25CC\u25CF\u25D8\u25D9\u25E6\u263A-\u263C\u2640\u2642\u2660\u2663\u2665\u2666\u266A\u266B\u266F\u2736\u2776-\u277F\u2C60-\u2C7F\u2E17\uA717-\uA721\uA788-\uA78C\uFB00-\uFB06\uFB13-\uFB17/u

// Note: this does not work with characters above U-ffff
// However, no cross-platform-terminal-characters is currently above U-ffff
// Otherwise `eval()` should be used instead.
const codepointToCharacter = function (codepoint) {
  return String.fromCharCode(codepoint)
}

export const characters = codepoints.map(codepointToCharacter)
/* eslint-enable max-lines */
